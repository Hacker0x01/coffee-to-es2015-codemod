var Trigger,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Trigger = (function(superClass) {
  extend(Trigger, superClass);

  function Trigger() {
    return Trigger.__super__.constructor.apply(this, arguments);
  }

  Trigger.default_criterion = {
    field: ''
  };

  Trigger.prototype.defaults = {
    criteria: [Trigger.default_criterion()]
  };

  return Trigger;

})(Backbone.Model);
